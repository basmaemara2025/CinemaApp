@model CinemaApp.Areas.Admin.ViewModels.MovieFormViewModel

<div class="container mt-4">
    <h3 class="mb-4 text-primary">Edit Movie</h3>

    <form asp-action="Edit" method="post" enctype="multipart/form-data">
        <input type="hidden" asp-for="Movie.Id" />

        <!-- Title -->
        <div class="mb-3">
            <label class="form-label">Title</label>
            <input asp-for="Movie.Title" class="form-control" />
            <span asp-validation-for="Movie.Title" class="text-danger"></span>
        </div>

        <!-- Description -->
        <div class="mb-3">
            <label class="form-label">Description</label>
            <textarea asp-for="Movie.Description" class="form-control" rows="4"></textarea>
            <span asp-validation-for="Movie.Description" class="text-danger"></span>
        </div>

        <!-- Price -->
        <div class="mb-3">
            <label class="form-label">Price</label>
            <input asp-for="Movie.Price" type="number" step="0.01" class="form-control" />
            <span asp-validation-for="Movie.Price" class="text-danger"></span>
        </div>

        <!-- Release Date -->
        <div class="mb-3">
            <label class="form-label">Release Date</label>
            <input asp-for="Movie.ReleaseDate" type="date" class="form-control" />
            <span asp-validation-for="Movie.ReleaseDate" class="text-danger"></span>
        </div>

        <!-- Category -->
        <div class="mb-3">
            <label class="form-label">Category</label>
            <select asp-for="Movie.CategoryId" class="form-control">
                <option value="">-- Select Category --</option>
                @foreach (var cat in Model.Categories)
                {
                    <option value="@cat.Id" selected="@(cat.Id == Model.Movie.CategoryId)">
                        @cat.Name
                    </option>
                }
            </select>
            <span asp-validation-for="Movie.CategoryId" class="text-danger"></span>
        </div>

        <!-- Cinema -->
        <div class="mb-3">
            <label class="form-label">Cinema</label>
            <select asp-for="Movie.CinemaId" class="form-control">
                <option value="">-- Select Cinema --</option>
                @foreach (var cin in Model.Cinemas)
                {
                    <option value="@cin.Id" selected="@(cin.Id == Model.Movie.CinemaId)">
                        @cin.Name
                    </option>
                }
            </select>
            <span asp-validation-for="Movie.CinemaId" class="text-danger"></span>
        </div>

        <!-- Is Top Movie -->
        <div class="form-check form-switch mb-4">
            <input asp-for="Movie.IsTopMovie" class="form-check-input" type="checkbox" />
            <label class="form-check-label">Top Movie</label>
        </div>

        <!-- Main Image -->
        <div class="mb-4">
            <label class="form-label">Main Image</label>
            <div class="mb-2">
                <img src="@(!string.IsNullOrEmpty(Model.Movie.MainImage) ? Model.Movie.MainImage : "/Admin/assets/MovieImages/default.png")"
                     width="150" height="150" id="previewImage" class="rounded shadow-sm mb-2" />
            </div>
            <input type="file" name="MainImageFile" id="MainImageFile" class="form-control" accept="image/*" />
        </div>

        <!-- Sub Images -->
        <div class="mb-4">
            <label class="form-label">Sub Images</label>
            <div id="existingSubImages" class="d-flex flex-wrap gap-2 mb-2">
                @if (Model.Movie.MovieSubImages != null && Model.Movie.MovieSubImages.Any())
                {
                    foreach (var sub in Model.Movie.MovieSubImages)
                    {
                        <div class="position-relative" data-db-id="@sub.Id">
                            <img src="@sub.ImagePath" width="120" height="120" class="rounded shadow-sm border" />
                            <button type="button" class="btn btn-sm btn-danger position-absolute top-0 end-0 m-1 remove-subimage">x</button>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted">No sub images available</p>
                }
            </div>

            <div id="newSubImagesPreview" class="d-flex flex-wrap gap-2 mb-2"></div>
            <input type="file" name="SubImageFiles" id="SubImageFiles" class="form-control" multiple />
        </div>

        <div class="d-flex justify-content-end gap-2">
            <button type="submit" class="btn btn-primary px-4">Update</button>
            <a asp-action="Index" class="btn btn-secondary px-4">Cancel</a>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        // Main image preview
        document.getElementById("MainImageFile")?.addEventListener("change", e => {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = ev => document.getElementById("previewImage").src = ev.target.result;
                reader.readAsDataURL(file);
            }
        });

        // Sub image previews
        document.getElementById("SubImageFiles")?.addEventListener("change", e => {
            const files = e.target.files;
            const preview = document.getElementById("newSubImagesPreview");
            preview.innerHTML = "";
            Array.from(files).forEach((file, index) => {
                const reader = new FileReader();
                reader.onload = ev => {
                    const div = document.createElement("div");
                    div.classList.add("position-relative");
                    div.innerHTML = `
                        <img src="${ev.target.result}" width="120" height="120" class="rounded shadow-sm border"/>
                        <button type="button" class="btn btn-sm btn-danger position-absolute top-0 end-0 m-1 remove-new-subimage" data-index="${index}">x</button>
                    `;
                    preview.appendChild(div);
                };
                reader.readAsDataURL(file);
            });
        });

        // Remove existing subimage
        document.querySelectorAll(".remove-subimage").forEach(btn => {
            btn.addEventListener("click", function () {
                const div = this.parentElement;
                const dbId = div.getAttribute("data-db-id");
                fetch('/Admin/Movie/DeleteSubImage/' + dbId, { method: 'POST' })
                    .then(res => {
                        if (res.ok) div.remove();
                    });
            });
        });

        // Remove new subimages before submit
        document.getElementById("newSubImagesPreview")?.addEventListener("click", e => {
            if (e.target.classList.contains("remove-new-subimage")) {
                const div = e.target.parentElement;
                const index = e.target.getAttribute("data-index");
                div.remove();
                const input = document.getElementById("SubImageFiles");
                const dt = new DataTransfer();
                Array.from(input.files).forEach((file, i) => {
                    if (i != index) dt.items.add(file);
                });
                input.files = dt.files;
            }
        });
    </script>
}
